{
  "name": "Computationalchemistry",
  "tagline": "Computational Chemisitry Project",
  "body": "---\r\nauthor:\r\n- Rutuj Gavankar\r\ndate: 11 December 2017\r\ntitle: |\r\n    Computational Chemistry - \r\n    3D Modeling and Bond Geometry\r\n---\r\n\r\nProject Summary\r\n===============\r\n\r\nThis project uses an open-source file format called '.xyz', which is\r\nessentially a text file with the names and coordinates of atoms of a\r\ncompound.\r\n\r\nThe program reads this text file, coverts it into a multidimensional\r\narray, imports a CVS file that contains the periodic table and converts\r\nit into an array. It calculates the bond lengths, bond angles, molecular\r\nmass, and plots it in 3D space. It also generates a unique colour for\r\neach of the atoms.\r\n\r\nUse Case Analysis\r\n=================\r\n\r\nThis project is for people who would like to visualize chemical bonds.\r\nCovalent compounds have specific geometries depending on the number of\r\nlone pairs and the bonds. The bond length, bond angle, both depend on\r\nthe electrostatic forces of attraction and repulsion.\r\n\r\nXYZ is an open source file format. Downloading a xyz file of the desired\r\ncompound and loading it in the program, the molecule can be graphed in\r\n3d space and the molecular mass, atomic radii, bond length and bond\r\nangles can be calculated.\r\n\r\nData Design\r\n===========\r\n\r\nam using arrays for everything. The xyz text file is stored in a 2D\r\narray. The CVS file is stored in a 2D array as well. The program is\r\ndivided into functions. Each function does one job and returns a value.\r\nThere are also functions that show the values of other functions.\r\n\r\nI did not choose object oriented programming because it had no\r\nsignificant advantage over this approach. Infact, it would be twice as\r\nmuch tedious. All functions more or less depend on matrix manipulation.\r\n\r\nThere is also a function to save the output as a txt file\r\n\r\nUI Design\r\n=========\r\n\r\nI am using a Jupyter Notebook. The module I am using, VPython, doesn't\r\nwork outside Jupyter. The first cell is just the code for people to view\r\nThe second cell executes the 3d plot The third cell executes the math\r\noutputs The fourth cell asks for a save file prompt\r\n\r\nAlgorithm\r\n=========\r\n\r\nThe XYZ file is imported into python using file functions. It is stored\r\nin a multidimensional array (2x2).The same is done to a CVS file with\r\nthe periodic table.\r\n\r\n1.  Atomic Mass is calculated by adding up all the masses of individual\r\n    atoms. The masses of atoms are found by comparing the periodic table\r\n    cvs and the xyz file.\r\n\r\n2.  Covalent Radius of an atom is displayed by using a similar method\r\n\r\n3.  Bond length is calculated by calculating the distance between all\r\n    the atoms, and then comparing each of them for finding the ones that\r\n    bond.\r\n\r\n4.  Bond Angles are found by converting each of the coordinates to a\r\n    position vector. The difference between 3 position vectors gives 2\r\n    vectors with 1 common point. Angle between these vectors is arc\r\n    cosine of the dot product of them divided by product of their\r\n    lengths. It is then converted to degrees.\r\n\r\nAcknowledgment\r\n==============\r\n\r\nModules:\r\n\r\n-   SciPy : https://www.scipy.org/\r\n\r\n-   Visual Python (VPython): http://www.vpython.org/\r\n\r\n-   NumPy : http://www.numpy.org/\r\n\r\n-   Jupyter : http://jupyter.org/\r\n\r\nFiles\r\n\r\n-   periodicTable.cvs :\r\n    https://github.com/andrejewski/periodic-table/blob/master/data.csv\r\n\r\n-   xyz files :\r\n    https://github.com/tmpchem/computational\\_chemistry/tree/master/geom/xyz\r\n\r\nOther Resources:\r\n\r\n-   https://cs.iupui.edu/~aharris/230/\r\n\r\n-   Stewart, James. Calculus. Cengage Learning, 2016.\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}